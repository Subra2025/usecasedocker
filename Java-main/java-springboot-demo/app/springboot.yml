trigger:
  - none

variables:
  azureSubscription: 'subradocker'
  webAppName: 'subrafirstapp'
  containerRegistry: 'dockerfirstapp'
  imageName: 'spring-boot-demo'

stages:
- stage: Build
  displayName: Build and Push Docker Image
  jobs:
  - job: BuildDockerImage
    displayName: Build Maven Package and Docker Image
    pool:
      name: 'Default'
    steps:
    - script: java -version
      displayName: 'Verify Java Version'

    # ✅ Ensure Maven is installed
    - script: mvn -version
      displayName: 'Verify Maven Version'

    # ✅ Maven Build Step
    - task: Maven@3
      displayName: 'Maven Package'
      inputs:
        mavenPomFile: 'Java-main/java-springboot-demo/app/pom.xml'
        goals: 'clean package -DskipTests'

    # ✅ Ensure Docker is installed
    - script: docker --version
      displayName: 'Verify Docker Installation'

    # ✅ Build the Docker image using the pre-built JAR
    - script: |
        docker build -t $(containerRegistry).azurecr.io/$(imageName):$(Build.BuildId) ./Java-main/java-springboot-demo/app
      displayName: 'Build Docker Image'

    # ✅ Push the Docker image to Azure Container Registry
    - script: |
        az acr login --name $(containerRegistry)
        docker push $(containerRegistry).azurecr.io/$(imageName):$(Build.BuildId)
      displayName: 'Push Docker Image to ACR'

- stage: Deploy
  displayName: Deploy to Azure Web Apps
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: DeployContainerizedApp
    displayName: Deploy Docker Container to Web App
    environment: 'development'
    pool:
      name: 'Default'
      
    strategy:
      runOnce:
        deploy:
          steps:
          # ✅ Deploy the Docker container to Azure Web Apps
          - task: AzureWebAppContainer@1
            displayName: 'Deploy to Azure Web App'
            inputs:
              azureSubscription: $(azureSubscription)
              appName: $(webAppName)
              imageName: $(containerRegistry).azurecr.io/$(imageName):$(Build.BuildId)
